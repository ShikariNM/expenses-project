services:
  db:
    image: postgres:17.2
    restart: always
    environment:
      POSTGRES_DB: ${DATABASE_NAME}
      POSTGRES_USER: ${DATABASE_USERNAME}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    env_file:
      - .env

  web:
    build:
      context: ../
      dockerfile: deploy/Dockerfile
    container_name: expenses-project
    restart: always
    depends_on:
      - db
    environment:
      DJANGO_SECRET_KEY: ${DJANGO_SECRET_KEY}
      DEBUG: ${DEBUG}
#      DJANGO_LOGLEVEL: ${DJANGO_LOGLEVEL} not implemented yet
      DJANGO_ALLOWED_HOSTS: ${DJANGO_ALLOWED_HOSTS}
      DATABASE_ENGINE: ${DATABASE_ENGINE}
      DATABASE_NAME: ${DATABASE_NAME}
      DATABASE_USERNAME: ${DATABASE_USERNAME}

      DATABASE_PASSWORD: ${DATABASE_PASSWORD}
      DATABASE_HOST: ${DATABASE_HOST}
      DATABASE_PORT: ${DATABASE_PORT}
    env_file:
      - .env
    volumes:
      - static_data:/app/static
    networks:
      - backend
    expose:
      - "8000"

  nginx:
    image: nginx:1.26.3
    restart: always
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - static_data:/app/static
    ports:
      - "80:80"
    depends_on:
      - web
    networks:
      - backend

volumes:
  static_data:
  postgres_data:

networks:
  backend:
    driver: bridge